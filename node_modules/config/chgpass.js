  var crypto = require('crypto');
  var rand = require('csprng');
  var mongoose = require('mongoose');
  var nodemailer = require('nodemailer');
  var models = require('config/models');

  var smtpTransport = nodemailer.createTransport("SMTP",{
      service : "Gmail",
      auth: {
          user: "teamtravey@gmail.com", 
          pass: "teamtravey1234"
      	}
  });


  exports.cpass = function(id,opass,npass,callback) {
    console.log(id);
    //console.log(opass);
    //console.log(npass);

    var temp1 =rand(160, 36);
    var newpass1 = temp1 + npass;
    var hashed_passwordn = crypto.createHash('sha512').update(newpass1).digest("hex");

    models.User.find({phone_number: id},function(err,users){

      if(users.length != 0){

        console.log("users length = "+ users.length + "  name  "+ users[0].user_name);
        var temp = users[0].salt;
        var hash_db = users[0].hashed_password;
        var newpass = temp + opass;
        var hashed_password = crypto.createHash('sha512').update(newpass).digest("hex");

        console.log(temp);
        console.log(newpass);
        console.log(hashed_password);
        console.log(hash_db);
        console.log(opass);
        console.log(npass);

        if(hash_db == hashed_password){
          if (npass.length > 5) {
                  console.log("match");
                  console.log(id);
                  console.log(opass);
                  console.log(npass);

            models.User.findOne({ phone_number: id }, function (err, doc){
              doc.hashed_password = hashed_passwordn;
              doc.salt = temp1;
              doc.save();

              callback({'response':"Password Sucessfully Changed",'res':true});

            });
          }else{ 

            callback({'response':"New Password is Weak. Try a Strong Password !",'res':false});

          }
        }else{

          callback({'response':"Passwords do not match. Try Again !",'res':false});

        }
      }else{

        callback({'response':"Error while changing password",'res':false});

      }

    });
  }

  exports.respass_init = function(email,callback) {

    var temp =rand(24, 24);
    models.User.find({email: email},function(err,users){

      if(users.length != 0){


        models.User.findOne({ email: email }, function (err, doc){
          doc.temp_str= temp;
          doc.save();



          mailList ={};
   mailList.to = email;
   mailList.subject = "Regarding changing password";
   mailList.text = 'Your code password is  "'+ temp+'"';
   smtpTransport.sendMail(mailList, function(error, response){
    if(error){
     console.log(error);
     callback({'response':"Error While Resetting password. Try Again !",'res':false});
    }
    else{
     console.log("Message sent: " + response.message);
      callback({'response':"Check your Email and enter the verification code to reset your Password.",'res':true});
    }
   });





          /*var mailOptions = {
            from: "teamtravey@gmail.com", 
            to: email,
            subject: "Reset Password ", 
            text: "Hello "+email+".  Code to reset your Password is "+temp+".\n\nRegards,\nTeam Travey.",
          }

          smtpTransport.sendMail(mailOptions, function(error, response){
            if(error){

              callback({'response':"Error While Resetting password. Try Again !",'res':false});
              console.log(response + email);

            }else{

              callback({'response':"Check your Email and enter the verification code to reset your Password.",'res':true});

            }
          });*/
        });
      }else{

        callback({'response':"Email Does not Exists.",'res':false});

      }
    });
  }

  exports.respass_chg = function(email,code,npass,callback) {


    models.User.find({email: email},function(err,users){

      if(users.length != 0){

        var temp = users[0].temp_str;
        var temp1 =rand(160, 36);
        var newpass1 = temp1 + npass;
        var hashed_password = crypto.createHash('sha512').update(newpass1).digest("hex");

        if(temp == code){
          if ( npass.length > 5 ) {
            models.User.findOne({ email: email }, function (err, doc){
            doc.hashed_password= hashed_password;
            doc.salt = temp1;
            doc.temp_str = "";
            doc.save();

            callback({'response':"Password Sucessfully Changed",'res':true});

          });
          }else{

            callback({'response':"New Password is Weak. Try a Strong Password !",'res':false});

          }
        }else{

          callback({'response':"Code does not match. Try Again !",'res':false});

        }
      }else{

      callback({'response':"Error",'res':true});

    }
  });
}

